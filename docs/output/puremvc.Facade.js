Ext.data.JsonP.puremvc_Facade({"requires":[],"aliases":{},"component":false,"inheritable":false,"subclasses":[],"alternateClassNames":[],"mixedInto":[],"tagname":"class","extends":null,"uses":[],"statics":{"property":[],"css_var":[],"css_mixin":[],"cfg":[],"method":[{"owner":"puremvc.Facade","tagname":"method","name":"hasCore","id":"static-method-hasCore","meta":{"static":true}},{"owner":"puremvc.Facade","tagname":"method","name":"removeCore","id":"static-method-removeCore","meta":{"static":true}}],"event":[]},"files":[{"href":"Facade.html#puremvc-Facade","filename":"Facade.js"}],"allMixins":[],"singleton":false,"code_type":"function","members":{"property":[],"css_var":[],"css_mixin":[],"cfg":[],"method":[{"owner":"puremvc.Facade","tagname":"method","name":"constructor","id":"method-constructor","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"getInstance","id":"method-getInstance","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"hasCommand","id":"method-hasCommand","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"hasMediator","id":"method-hasMediator","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"hasProxy","id":"method-hasProxy","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"initializeController","id":"method-initializeController","meta":{"protected":true}},{"owner":"puremvc.Facade","tagname":"method","name":"initializeFacade","id":"method-initializeFacade","meta":{"protected":true}},{"owner":"puremvc.Facade","tagname":"method","name":"initializeModel","id":"method-initializeModel","meta":{"protected":true}},{"owner":"puremvc.Facade","tagname":"method","name":"initializeNotifier","id":"method-initializeNotifier","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"initializeView","id":"method-initializeView","meta":{"protected":true}},{"owner":"puremvc.Facade","tagname":"method","name":"notifyObservers","id":"method-notifyObservers","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"registerCommand","id":"method-registerCommand","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"registerMediator","id":"method-registerMediator","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"registerProxy","id":"method-registerProxy","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"removeCommand","id":"method-removeCommand","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"removeMediator","id":"method-removeMediator","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"removeProxy","id":"method-removeProxy","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"retrieveMediator","id":"method-retrieveMediator","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"retrieveProxy","id":"method-retrieveProxy","meta":{}},{"owner":"puremvc.Facade","tagname":"method","name":"sendNotification","id":"method-sendNotification","meta":{}}],"event":[]},"superclasses":[],"private":false,"name":"puremvc.Facade","mixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Facade.html#puremvc-Facade' target='_blank'>Facade.js</a></div></pre><div class='doc-contents'><p>Facade exposes the functionality of the Controller, Model and View\nactors to client facing code.</p>\n\n<p>This Facade implementation is a Multiton, so you should not call the\nconstructor directly, but instead call the static Factory method,\npassing the unique key for this instance to <a href=\"#!/api/puremvc.Facade-method-getInstance\" rel=\"puremvc.Facade-method-getInstance\" class=\"docClass\">getInstance</a></p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/puremvc.Facade-method-constructor' class='name expandable'>puremvc.Facade</a>( <span class='pre'>string key</span> ) : Object</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>The multiton key to use to retrieve the Facade instance.\n@throws {Error}\n If an attempt is made to instantiate Facade directly</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>string key</span> ) : <a href=\"#!/api/puremvc.Facade\" rel=\"puremvc.Facade\" class=\"docClass\">puremvc.Facade</a></div><div class='description'><div class='short'>Facade Multiton Factory method. ...</div><div class='long'><p>Facade Multiton Factory method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>The multiton key use to retrieve a particular Facade instance</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/puremvc.Facade\" rel=\"puremvc.Facade\" class=\"docClass\">puremvc.Facade</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-hasCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-hasCommand' class='name expandable'>hasCommand</a>( <span class='pre'>string notificationName</span> ) : boolean</div><div class='description'><div class='short'>Check if a command is registered for a given notification. ...</div><div class='long'><p>Check if a command is registered for a given notification.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>A Notification name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>Whether a comman is currently registered for the given notificationName</p>\n</div></li></ul></div></div></div><div id='method-hasMediator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-hasMediator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-hasMediator' class='name expandable'>hasMediator</a>( <span class='pre'>string mediatorName</span> ) : boolean</div><div class='description'><div class='short'>Check if a Mediator is registered or not. ...</div><div class='long'><p>Check if a Mediator is registered or not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mediatorName</span> : string<div class='sub-desc'><p>A Mediator name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>Whether a Mediator is registered with the given mediatorName</p>\n</div></li></ul></div></div></div><div id='method-hasProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-hasProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-hasProxy' class='name expandable'>hasProxy</a>( <span class='pre'>string proxyName</span> ) : boolean</div><div class='description'><div class='short'>Check it a Proxy is registered. ...</div><div class='long'><p>Check it a Proxy is registered.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxyName</span> : string<div class='sub-desc'><p>A Proxy name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>Whether a Proxy is currently registered with the given proxyName</p>\n</div></li></ul></div></div></div><div id='method-initializeController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-initializeController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-initializeController' class='name expandable'>initializeController</a>( <span class='pre'></span> ) : void<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize the Controller. ...</div><div class='long'><p>Initialize the <a href=\"#!/api/puremvc.Controller\" rel=\"puremvc.Controller\" class=\"docClass\">Controller</a>.</p>\n\n<p>Called by the <a href=\"#!/api/puremvc.Facade-method-initializeFacade\" rel=\"puremvc.Facade-method-initializeFacade\" class=\"docClass\">initializeFacade</a> method.</p>\n\n<p>Override this method in your subclass of Facade\nif one or both of the following are true:</p>\n\n<ul>\n<li>You wish to initialize a different Controller</li>\n<li>You have\n<a href=\"#!/api/puremvc.SimpleCommand\" rel=\"puremvc.SimpleCommand\" class=\"docClass\">SimpleCommand</a>s\nor <a href=\"#!/api/puremvc.MacroCommand\" rel=\"puremvc.MacroCommand\" class=\"docClass\">MacroCommand</a>s\nto register with the Controllerat startup.</li>\n</ul>\n\n\n<p>If you don't want to initialize a different Controller,\ncall the 'super' initializeControlle method at the beginning of your\nmethod, then register commands.</p>\n\n<pre><code>MyFacade.prototype.initializeController= function ()\n{\n    Facade.prototype.initializeController.call(this);\n    this.registerCommand(AppConstants.A_NOTE_NAME, ABespokeCommand)\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initializeFacade' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-initializeFacade' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-initializeFacade' class='name expandable'>initializeFacade</a>( <span class='pre'></span> ) : void<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize the Multiton Facade instance. ...</div><div class='long'><p>Initialize the Multiton Facade instance.</p>\n\n<p>Called automatically by the constructor. Override in your subclass to any\nsubclass specific initializations. Be sure to call the 'super'\ninitializeFacade method, though</p>\n\n<pre><code>MyFacade.prototype.initializeFacade= function ()\n{\n    Facade.call(this);\n};\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initializeModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-initializeModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-initializeModel' class='name expandable'>initializeModel</a>( <span class='pre'></span> ) : void<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize the Model;\n\nCalled by the initializeFacade method. ...</div><div class='long'><p>Initialize the <a href=\"#!/api/puremvc.Model\" rel=\"puremvc.Model\" class=\"docClass\">Model</a>;</p>\n\n<p>Called by the <a href=\"#!/api/puremvc.Facade-method-initializeFacade\" rel=\"puremvc.Facade-method-initializeFacade\" class=\"docClass\">initializeFacade</a> method.\nOverride this method in your subclass of Facade if one of the following are\ntrue:</p>\n\n<ul>\n<li><p>You wish to initialize a different Model.</p></li>\n<li><p>You have <a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">Proxy</a>s to\nregister with the Model that do not retrieve a reference to the Facade at\nconstruction time.</p></li>\n</ul>\n\n\n<p>If you don't want to initialize a different Model\ncall 'super' <a href=\"#!/api/puremvc.Facade-method-initializeModel\" rel=\"puremvc.Facade-method-initializeModel\" class=\"docClass\">initializeModel</a> at the beginning of your method, then register\nProxys.</p>\n\n<p>Note: This method is <em>rarely</em> overridden; in practice you are more\nlikely to use a command to create and registerProxys with the Model>,\nsince Proxys with mutable data will likely\nneed to send Notifications and thus will likely want to fetch a reference to\nthe Facade during their construction.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initializeNotifier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-initializeNotifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-initializeNotifier' class='name expandable'>initializeNotifier</a>( <span class='pre'>string key</span> ) : void</div><div class='description'><div class='short'>Initialize the Facades Notifier capabilities by setting the Multiton key for\nthis facade instance. ...</div><div class='long'><p>Initialize the Facades Notifier capabilities by setting the Multiton key for\nthis facade instance.</p>\n\n<p>Not called directly, but instead from the constructor when <a href=\"#!/api/puremvc.Facade-method-getInstance\" rel=\"puremvc.Facade-method-getInstance\" class=\"docClass\">getInstance</a> is\ninvoked. It is necessary to be public in order to implement Notifier</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initializeView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-initializeView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-initializeView' class='name expandable'>initializeView</a>( <span class='pre'></span> ) : void<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize the View. ...</div><div class='long'><p>Initialize the <a href=\"#!/api/puremvc.View\" rel=\"puremvc.View\" class=\"docClass\">View</a>.</p>\n\n<p>Called by the <a href=\"#!/api/puremvc.Facade-method-initializeFacade\" rel=\"puremvc.Facade-method-initializeFacade\" class=\"docClass\">initializeFacade</a> method.</p>\n\n<p>Override this method in your subclass of Facade if one or both of the\nfollowing are true:</p>\n\n<ul>\n<li>You wish to initialize a different View.</li>\n<li>You have Observers to register with the View</li>\n</ul>\n\n\n<p>If you don't want to initialize a different View\ncall 'super' <a href=\"#!/api/puremvc.Facade-method-initializeView\" rel=\"puremvc.Facade-method-initializeView\" class=\"docClass\">initializeView</a> at the beginning of your\nmethod, then register Mediator instances.</p>\n\n<pre><code>MyFacade.prototype.initializeView= function ()\n{\n    Facade.prototype.initializeView.call(this);\n    this.registerMediator(new MyMediator());\n};\n</code></pre>\n\n<p>Note: This method is <em>rarely</em> overridden; in practice you are more\nlikely to use a command to create and register Mediators\nwith the View, since Mediator instances will need to send\nNotifications and thus will likely want to fetch a reference\nto the Facade during their construction.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-notifyObservers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-notifyObservers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-notifyObservers' class='name expandable'>notifyObservers</a>( <span class='pre'><a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">puremvc.Notification</a> notification</span> ) : void</div><div class='description'><div class='short'>Notify Observers\n\nThis method is left public mostly for backward compatibility, and to allow\nyou to send custom notif...</div><div class='long'><p>Notify <a href=\"#!/api/puremvc.Observer\" rel=\"puremvc.Observer\" class=\"docClass\">Observer</a>s</p>\n\n<p>This method is left public mostly for backward compatibility, and to allow\nyou to send custom notification classes using the facade.</p>\n\n<p>Usually you should just call sendNotification and pass the parameters, never\nhaving to construct the notification yourself.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notification</span> : <a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">puremvc.Notification</a><div class='sub-desc'><p>The Notification to send</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-registerCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-registerCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-registerCommand' class='name expandable'>registerCommand</a>( <span class='pre'>string notificationName, Function commandClassRef</span> ) : void</div><div class='description'><div class='short'>Register a command with the Controller by Notification name ...</div><div class='long'><p>Register a command with the Controller by Notification name</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>The name of the Notification to associate the command with</p>\n</div></li><li><span class='pre'>commandClassRef</span> : Function<div class='sub-desc'><p>A reference ot the commands constructor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-registerMediator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-registerMediator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-registerMediator' class='name expandable'>registerMediator</a>( <span class='pre'><a href=\"#!/api/puremvc.Mediator\" rel=\"puremvc.Mediator\" class=\"docClass\">puremvc.Mediator</a> mediator</span> ) : void</div><div class='description'><div class='short'>Register a Mediator with with the View. ...</div><div class='long'><p>Register a Mediator with with the View.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mediator</span> : <a href=\"#!/api/puremvc.Mediator\" rel=\"puremvc.Mediator\" class=\"docClass\">puremvc.Mediator</a><div class='sub-desc'><p>A reference to the Mediator to register</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-registerProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-registerProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-registerProxy' class='name expandable'>registerProxy</a>( <span class='pre'><a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">puremvc.Proxy</a> proxy</span> ) : void</div><div class='description'><div class='short'>Register a Proxy with the Model\nby name. ...</div><div class='long'><p>Register a Proxy with the Model\nby name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : <a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">puremvc.Proxy</a><div class='sub-desc'><p>The Proxy instance to be registered with the Model.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-removeCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-removeCommand' class='name expandable'>removeCommand</a>( <span class='pre'>string notificationName</span> ) : void</div><div class='description'><div class='short'>Remove a previously registered command to Notification mapping from the\nController ...</div><div class='long'><p>Remove a previously registered command to Notification mapping from the\n<a href=\"#!/api/puremvc.Controller-method-removeCommand\" rel=\"puremvc.Controller-method-removeCommand\" class=\"docClass\">Controller</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>The name of the the Notification to remove from the command mapping for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeMediator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-removeMediator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-removeMediator' class='name expandable'>removeMediator</a>( <span class='pre'>string mediatorName</span> ) : <a href=\"#!/api/puremvc.Mediator\" rel=\"puremvc.Mediator\" class=\"docClass\">puremvc.Mediator</a></div><div class='description'><div class='short'>Remove a Mediator from the View. ...</div><div class='long'><p>Remove a Mediator from the View.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mediatorName</span> : string<div class='sub-desc'><p>The name of the Mediator to remove.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/puremvc.Mediator\" rel=\"puremvc.Mediator\" class=\"docClass\">puremvc.Mediator</a></span><div class='sub-desc'><p>The removed Mediator</p>\n</div></li></ul></div></div></div><div id='method-removeProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-removeProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-removeProxy' class='name expandable'>removeProxy</a>( <span class='pre'>string proxyName</span> ) : <a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">puremvc.Proxy</a></div><div class='description'><div class='short'>Remove a Proxy from the Model by name ...</div><div class='long'><p>Remove a Proxy from the Model by name</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxyName</span> : string<div class='sub-desc'><p>The name of the Proxy</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">puremvc.Proxy</a></span><div class='sub-desc'><p>The Proxy that was removed from the Model</p>\n</div></li></ul></div></div></div><div id='method-retrieveMediator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-retrieveMediator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-retrieveMediator' class='name expandable'>retrieveMediator</a>( <span class='pre'>string mediatorName</span> ) : <a href=\"#!/api/puremvc.Mediator\" rel=\"puremvc.Mediator\" class=\"docClass\">puremvc.Mediator</a></div><div class='description'><div class='short'>Retrieve a Mediator from the View by name ...</div><div class='long'><p>Retrieve a Mediator from the View by name</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mediatorName</span> : string<div class='sub-desc'><p>The Mediators name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/puremvc.Mediator\" rel=\"puremvc.Mediator\" class=\"docClass\">puremvc.Mediator</a></span><div class='sub-desc'><p>The retrieved Mediator</p>\n</div></li></ul></div></div></div><div id='method-retrieveProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-retrieveProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-retrieveProxy' class='name expandable'>retrieveProxy</a>( <span class='pre'>string proxyName</span> ) : <a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">puremvc.Proxy</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxyName</span> : string<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/puremvc.Proxy\" rel=\"puremvc.Proxy\" class=\"docClass\">puremvc.Proxy</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-sendNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-method-sendNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-method-sendNotification' class='name expandable'>sendNotification</a>( <span class='pre'>string notificationName, [Object body], [string type]</span> ) : void</div><div class='description'><div class='short'>Create and send a\nNotification\n\nKeeps us from having to construct new Notification instances in our\nimplementation ...</div><div class='long'><p>Create and send a\n<a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">Notification</a></p>\n\n<p>Keeps us from having to construct new Notification instances in our\nimplementation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>The name of the Notification to send</p>\n</div></li><li><span class='pre'>body</span> : Object (optional)<div class='sub-desc'><p>The body of the notification</p>\n</div></li><li><span class='pre'>type</span> : string (optional)<div class='sub-desc'><p>The type of the notification</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-hasCore' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-static-method-hasCore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-static-method-hasCore' class='name expandable'>hasCore</a>( <span class='pre'>string key</span> ) : boolean<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Check if a Core is registered or not ...</div><div class='long'><p>Check if a <em>Core</em> is registered or not</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>The multiton key for the <em>Core</em> in question</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>Whether a <em>Core</em> is registered with the given key</p>\n</div></li></ul></div></div></div><div id='static-method-removeCore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Facade'>puremvc.Facade</span><br/><a href='source/Facade.html#puremvc-Facade-static-method-removeCore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Facade-static-method-removeCore' class='name expandable'>removeCore</a>( <span class='pre'>string key</span> ) : void<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Remove a Core\n\nRemove the Model, View, Controller and Facade for a given key. ...</div><div class='long'><p>Remove a <em>Core</em></p>\n\n<p>Remove the Model, View, Controller and Facade for a given key.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","id":"class-puremvc.Facade","meta":{},"inheritdoc":null});