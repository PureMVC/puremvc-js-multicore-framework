/*
 PureMVC ExtJS Javascript port by Tony DeFusco <tony.defusco@puremvc.org>
 PureMVC - Copyright(c) 2006-2011 Futurescale, Inc., Some rights reserved.
 Your reuse is governed by the Creative Commons Attribution 3.0 License
 */

Ext.namespace('Puremvc.test');

/**
 * @class Test the PureMVC SimpleCommand class.
 *
 * @see Puremvc.test.SimpleCommandTestVO
 * @see Puremvc.test.SimpleCommandTestCommand
 */
Puremvc.test.SimpleCommandTest = new YUITest.TestCase(
/**
 * @lends Puremvc.test.SimpleCommandTest.prototype
 */
{
  /**
   * The name of the test case - if not provided, one is automatically
   * generated by the YUITest framework.
   *
   * @type {String}
   * @private
   */
  name: "PureMVC SimpleCommand class Tests",

  /**
   * Sets up data that is needed by each test.
   */
  setUp: function() {
  },

  /**
   * Cleans up everything that was created by setUp().
   */
  tearDown: function() {
  },

  /**
   * Tests if constructing the <code>Puremvc.patterns.SimpleCommand</code> also call its
   * super by testing for the existence of its <code>Puremvc.patterns.Notifier</code>
   * superclass facade instance.
   */
  testConstructor: function() {
    // Create a new subclass of Notifier and verify that its facade
    // has well been created
    var simpleCommandTestSub/*Puremvc.test.SimpleCommandTestSub*/ = new SimpleCommandTestSub();

    // test assertions
    YUITest.Assert.isTrue(
      simpleCommandTestSub.hasFacade(),
      "Expecting simpleCommandTestSub.hasFacade() === true"
      );
  },

  /**
   * Tests the <code>execute</code> method of a <code>Puremvc.patterns.SimpleCommand</code>.
   *
   * <P>
   * This test creates a new <code>Puremvc.patterns.Notification</code>, adding a
   * <code>Puremvc.test.SimpleCommandTestVO</code> as the body.
   * It then creates a <code>Puremvc.test.SimpleCommandTestCommand</code> and invokes
   * its <code>execute</code> method, passing in the note.
   *
   * <P>
   * Success is determined by evaluating a property on the
   * object that was passed on the <code>Puremvc.patterns.Notification</code> body, which will
   * be modified by the <code>Puremvc.patterns.SimpleCommand</code>.
   *
   */
  testSimpleCommandExecute: function() {
    // Create the VO
    var vo/*Puremvc.test.SimpleCommandTestVO*/ = new SimpleCommandTestVO(5);

    // Create the Puremvc.patterns.Notification (note)
    var note/*Puremvc.patterns.Notification*/ = new Puremvc.patterns.Notification('SimpleCommandTestNote', vo);

    // Create the Puremvc.patterns.SimpleCommand
    var command/*Puremvc.test.SimpleCommandTestCommand*/ = new SimpleCommandTestCommand();

    // Execute the Puremvc.patterns.SimpleCommand
    command.execute(note);

    // test assertions
    YUITest.Assert.areEqual(
      10,
      vo.result,
      "Expecting vo.result == 10"
      );
  }
});

Alias('Puremvc.test.SimpleCommandTest');
