/*
 PureMVC ExtJS Javascript port by Tony DeFusco <tony.defusco@puremvc.org>
 PureMVC - Copyright(c) 2006-2011 Futurescale, Inc., Some rights reserved.
 Your reuse is governed by the Creative Commons Attribution 3.0 License
 */

Ext.namespace('Puremvc.test');

/**
 * @class Test the PureMVC MacroCommand class.
 *
 * @see Puremvc.test.MacroCommandTestVO
 * @see Puremvc.test.MacroCommandTestCommand
 */
Puremvc.test.MacroCommandTest = new YUITest.TestCase(
/**
 * @lends Puremvc.test.MacroCommandTest.prototype
 */
{
  /**
   * The name of the test case - if not provided, one is automatically
   * generated by the YUITest framework.
   *
   * @type {String}
   * @private
   */
  name: "PureMVC MacroCommand class tests",

  /**
   * Sets up data that is needed by each test.
   */
  setUp: function() {
  },

  /**
   * Cleans up everything that was created by setUp().
   */
  tearDown: function() {
  },

  /**
   * Tests if constructing the <code>MacroCommand</code> also call its
   * super by testing for the existence of its <code>Notifier</code>
   * superclass facade instance.
   */
  testConstructor: function() {
    // Create a new subclass of Notifier and verify that its facade
    // has well been created
    var macroCommandTestSub/*Puremvc.test.MacroCommandTestSub*/ = new MacroCommandTestSub();

    // test assertions
    YUITest.Assert.isTrue(
      macroCommandTestSub.hasFacade(),
      "Expecting macroCommandTestSub.hasFacade() === true"
      );

    macroCommandTestSub.addSubCommand(new SimpleCommandTestCommand());
    macroCommandTestSub.addSubCommand(new SimpleCommandTestCommand());
    var macroCommandTestSub2/*Puremvc.test.MacroCommandTestSub*/ = new MacroCommandTestSub();
    YUITest.Assert.areEqual(
      0,
      macroCommandTestSub2.subCommands.length,
      "Expecting macroCommandTestSub.subCommands.length === 0"
      );
  },

  /**
   * Tests operation of a <code>Puremvc.patterns.MacroCommand</code>.
   *
   * <P>
   * This test creates a new <code>Puremvc.patterns.Notification</code>, adding a
   * <code>Puremvc.test.MacroCommandTestVO</code> as the body.
   * It then creates a <code>Puremvc.test.MacroCommandTestCommand</code> and invokes
   * its <code>execute</code> method, passing in the
   * <code>Puremvc.patterns.Notification</code>.
   *
   * <P>
   * The <code>Puremvc.test.MacroCommandTestCommand</code> has defined an
   * <code>initMacroCommand</code> method, which is
   * called automatically by its constructor. In this method
   * the <code>Puremvc.test.MacroCommandTestCommand</code> adds two SubCommands
   * to itself, <code>Puremvc.test.MacroCommandTestSub1Command</code> and
   * <code>Puremvc.test.MacroCommandTestSub2Command</code>.
   *
   * <P>
   * The <code>Puremvc.test.MacroCommandTestVO</code> has two result properties,
   * one is set by <code>Puremvc.test.MacroCommandTestSub1Command</code> by
   * multiplying the input property by 2, and the other is set
   * by <code>Puremvc.test.MacroCommandTestSub2Command</code> by multiplying
   * the input property by itself.
   *
   * <P>
   * Success is determined by evaluating the two result properties
   * on the <code>Puremvc.test.MacroCommandTestVO</code> that was passed to
   * the <code>Puremvc.test.MacroCommandTestCommand</code> on the <code>Puremvc.patterns.Notification</code>
   * body.
   *
   */
  testMacroCommandExecute: function() {
    // Create the VO
    var vo/*Puremvc.test.MacroCommandTestVO*/ = new MacroCommandTestVO(5);

    // Create the Notification (note)
    var note/*Puremvc.patterns.Notification*/ = new Puremvc.patterns.Notification('MacroCommandTest', vo);

    // Create the SimpleCommand
    var command/*Puremvc.test.MacroCommandTestCommand*/ = new MacroCommandTestCommand();

    // Execute the Puremvc.patterns.SimpleCommand
    command.execute(note);

    // Test assertions
    YUITest.Assert.areEqual(
      10,
      vo.result1,
      "Expecting vo.result1 == 10"
      );

    YUITest.Assert.areEqual(
      25,
      vo.result2,
      "Expecting vo.result2 == 25"
      );
  }
});

Alias('Puremvc.test.MacroCommandTest');
