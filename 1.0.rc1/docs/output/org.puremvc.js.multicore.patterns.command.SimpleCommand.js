Ext.data.JsonP.org_puremvc_js_multicore_patterns_command_SimpleCommand({"requires":[],"aliases":{},"component":false,"inheritable":false,"subclasses":[],"alternateClassNames":[],"mixedInto":[],"tagname":"class","extends":"org.puremvc.js.multicore.patterns.observer.Notifier","uses":[],"statics":{"property":[],"css_var":[],"css_mixin":[],"cfg":[],"method":[],"event":[]},"files":[{"href":"SimpleCommand.html#org-puremvc-js-multicore-patterns-command-SimpleCommand","filename":"SimpleCommand.js"}],"allMixins":[],"singleton":false,"code_type":"function","members":{"property":[],"css_var":[],"css_mixin":[],"cfg":[],"method":[{"owner":"org.puremvc.js.multicore.patterns.command.SimpleCommand","tagname":"method","name":"constructor","id":"method-constructor","meta":{}},{"owner":"org.puremvc.js.multicore.patterns.command.SimpleCommand","tagname":"method","name":"execute","id":"method-execute","meta":{}},{"owner":"org.puremvc.js.multicore.patterns.observer.Notifier","tagname":"method","name":"getFacade","id":"method-getFacade","meta":{"protected":true}},{"owner":"org.puremvc.js.multicore.patterns.observer.Notifier","tagname":"method","name":"initializeNotifier","id":"method-initializeNotifier","meta":{}},{"owner":"org.puremvc.js.multicore.patterns.observer.Notifier","tagname":"method","name":"sendNotification","id":"method-sendNotification","meta":{}}],"event":[]},"superclasses":["org.puremvc.js.multicore.patterns.observer.Notifier","org.puremvc.js.multicore.patterns.command.SimpleCommand"],"private":false,"name":"org.puremvc.js.multicore.patterns.command.SimpleCommand","mixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier' rel='org.puremvc.js.multicore.patterns.observer.Notifier' class='docClass'>org.puremvc.js.multicore.patterns.observer.Notifier</a><div class='subclass '><strong>org.puremvc.js.multicore.patterns.command.SimpleCommand</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SimpleCommand.html#org-puremvc-js-multicore-patterns-command-SimpleCommand' target='_blank'>SimpleCommand.js</a></div></pre><div class='doc-contents'><p>SimpleCommands encapsulate the business logic of your application. Your\nsubclass should override the <a href=\"#!/api/org.puremvc.js.multicore.patterns.command.SimpleCommand-method-execute\" rel=\"org.puremvc.js.multicore.patterns.command.SimpleCommand-method-execute\" class=\"docClass\">execute</a> method where your business logic will\nhandle the\n<a href=\"#!/api/org.puremvc.js.multicore.patterns.observer.Notification\" rel=\"org.puremvc.js.multicore.patterns.observer.Notification\" class=\"docClass\">Notification</a></p>\n\n<p>Take a look at\n<a href=\"#!/api/org.puremvc.js.multicore.patterns.facade.Facade-method-registerCommand\" rel=\"org.puremvc.js.multicore.patterns.facade.Facade-method-registerCommand\" class=\"docClass\">Facade's registerCommand</a>\nor <a href=\"#!/api/org.puremvc.js.multicore.core.Controller-method-registerCommand\" rel=\"org.puremvc.js.multicore.core.Controller-method-registerCommand\" class=\"docClass\">Controllers registerCommand</a>\nmethods to see how to add commands to your application.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.patterns.command.SimpleCommand'>org.puremvc.js.multicore.patterns.command.SimpleCommand</span><br/><a href='source/SimpleCommand.html#org-puremvc-js-multicore-patterns-command-SimpleCommand-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/org.puremvc.js.multicore.patterns.command.SimpleCommand-method-constructor' class='name expandable'>org.puremvc.js.multicore.patterns.command.SimpleCommand</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-execute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.patterns.command.SimpleCommand'>org.puremvc.js.multicore.patterns.command.SimpleCommand</span><br/><a href='source/SimpleCommand.html#org-puremvc-js-multicore-patterns-command-SimpleCommand-method-execute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.patterns.command.SimpleCommand-method-execute' class='name expandable'>execute</a>( <span class='pre'><a href=\"#!/api/org.puremvc.js.multicore.patterns.observer.Notification\" rel=\"org.puremvc.js.multicore.patterns.observer.Notification\" class=\"docClass\">org.puremvc.js.multicore.patterns.observer.Notification</a> notification</span> ) : void</div><div class='description'><div class='short'>Fulfill the use-case initiated by the given Notification\n\nIn the Command Pattern, an application use-case typically b...</div><div class='long'><p>Fulfill the use-case initiated by the given Notification</p>\n\n<p>In the Command Pattern, an application use-case typically begins with some\nuser action, which results in a Notification is handled by the business logic\nin the <a href=\"#!/api/org.puremvc.js.multicore.patterns.command.SimpleCommand-method-execute\" rel=\"org.puremvc.js.multicore.patterns.command.SimpleCommand-method-execute\" class=\"docClass\">execute</a> method of a command.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notification</span> : <a href=\"#!/api/org.puremvc.js.multicore.patterns.observer.Notification\" rel=\"org.puremvc.js.multicore.patterns.observer.Notification\" class=\"docClass\">org.puremvc.js.multicore.patterns.observer.Notification</a><div class='sub-desc'><p>The notification to handle.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getFacade' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier' rel='org.puremvc.js.multicore.patterns.observer.Notifier' class='defined-in docClass'>org.puremvc.js.multicore.patterns.observer.Notifier</a><br/><a href='source/Notifier.html#org-puremvc-js-multicore-patterns-observer-Notifier-method-getFacade' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier-method-getFacade' class='name expandable'>getFacade</a>( <span class='pre'></span> ) : <a href=\"#!/api/org.puremvc.js.multicore.patterns.facade.Facade\" rel=\"org.puremvc.js.multicore.patterns.facade.Facade\" class=\"docClass\">org.puremvc.js.multicore.patterns.facade.Facade</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Retrieve the Multiton Facade instance ...</div><div class='long'><p>Retrieve the Multiton Facade instance</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/org.puremvc.js.multicore.patterns.facade.Facade\" rel=\"org.puremvc.js.multicore.patterns.facade.Facade\" class=\"docClass\">org.puremvc.js.multicore.patterns.facade.Facade</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initializeNotifier' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier' rel='org.puremvc.js.multicore.patterns.observer.Notifier' class='defined-in docClass'>org.puremvc.js.multicore.patterns.observer.Notifier</a><br/><a href='source/Notifier.html#org-puremvc-js-multicore-patterns-observer-Notifier-method-initializeNotifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier-method-initializeNotifier' class='name expandable'>initializeNotifier</a>( <span class='pre'>string key</span> ) : void</div><div class='description'><div class='short'>Initialize this Notifier instance. ...</div><div class='long'><p>Initialize this Notifier instance.</p>\n\n<p>This is how a Notifier gets its multitonKey.\nCalls to <a href=\"#!/api/org.puremvc.js.multicore.patterns.observer.Notifier-method-sendNotification\" rel=\"org.puremvc.js.multicore.patterns.observer.Notifier-method-sendNotification\" class=\"docClass\">sendNotification</a> or to access the\nfacade will fail until after this method\nhas been called.</p>\n\n<p>Mediators, Commands or Proxies may override\nthis method in order to send notifications\nor access the Multiton Facade instance as\nsoon as possible. They CANNOT access the facade\nin their constructors, since this method will not\nyet have been called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>The Notifiers multiton key;</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-sendNotification' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier' rel='org.puremvc.js.multicore.patterns.observer.Notifier' class='defined-in docClass'>org.puremvc.js.multicore.patterns.observer.Notifier</a><br/><a href='source/Notifier.html#org-puremvc-js-multicore-patterns-observer-Notifier-method-sendNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.patterns.observer.Notifier-method-sendNotification' class='name expandable'>sendNotification</a>( <span class='pre'>string notificationName, [Object body], [string type]</span> ) : void</div><div class='description'><div class='short'>Create and send a Notification. ...</div><div class='long'><p>Create and send a Notification.</p>\n\n<p>Keeps us from having to construct new Notification instances in our\nimplementation code.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>A notification name</p>\n</div></li><li><span class='pre'>body</span> : Object (optional)<div class='sub-desc'><p>The body of the notification</p>\n</div></li><li><span class='pre'>type</span> : string (optional)<div class='sub-desc'><p>The notification type</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","id":"class-org.puremvc.js.multicore.patterns.command.SimpleCommand","meta":{},"inheritdoc":null});